name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest --cov=app --cov-report=term-missing
          # Add specific test for stage2 endpoint
          curl -sSf http://localhost:8000/stage2 > /dev/null || (echo "Stage2 endpoint test failed" && exit 1)

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key $SERVER_USER@$SERVER_IP << 'EOL'
            # Verify deployment directory
            cd /path/to/your/app || exit 1
            
            # Force pull latest changes
            git fetch origin main
            git reset --hard origin/main
            
            # Ensure clean venv
            if [ ! -d "venv" ]; then
              python -m venv venv
            fi
            
            source venv/bin/activate
            pip install -U pip setuptools wheel
            pip install -r requirements.txt
            
            # Validate code update
            current_commit=$(git rev-parse HEAD)
            echo "Current commit: $current_commit"
            
            # Check for stage2 endpoint in code
            if ! grep -qr "/stage2" ./app; then
              echo "Stage2 endpoint missing in code!" >&2
              exit 1
            fi
            
            # Restart services with status check
            sudo systemctl daemon-reload
            sudo systemctl restart fastapi-app
            sudo systemctl restart nginx
            
            # Verify service status
            systemctl status fastapi-app | grep "active (running)" || exit 1
            
            # Add health check for endpoint
            sleep 5  # Give service time to start
            curl -sSf http://localhost:8000/stage2 > /dev/null || exit 1
          EOL

      - name: Post-deployment Verification
        run: |
          curl -sSf https://${{ secrets.SERVER_IP }}/stage2 || \
          (echo "Post-deployment verification failed" && exit 1)